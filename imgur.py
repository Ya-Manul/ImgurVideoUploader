# meta developer @YA_ManuI

import requests
import os
from hikkatl.types import Message
from hikkatl.tl.types import DocumentAttributeVideo
from .. import loader, utils

@loader.tds
class ImgurVideoUploaderMod(loader.Module):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –≤ Imgur –ø–æ —Ä–µ–ø–ª–∞—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –±–∞–Ω–µ—Ä–∞"""
    strings = {"name": "ImgurVideoUploader"}

    async def client_ready(self, client, db):
        self.client = client
        #–ø–æ –∂–µ–ª–∞–Ω–∏—é –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –∏–¥
        self.imgur_client_id = "7d2898754c1a0285ccbf9952f310dd2e" 

    @loader.command()
    async def ivup(self, message: Message):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –∏–∑ —Ä–µ–ø–ª–∞—è –≤ Imgur"""
        reply = await message.get_reply_message()
        if not reply or not reply.media:
            await utils.answer(message, "‚ùå –ù—É–∂–µ–Ω —Ä–µ–ø–ª–∞–π –Ω–∞ –≤–∏–¥–µ–æ!")
            return


        try:
            video = await reply.download_media(bytes)
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
            return

        if len(video) > 200 * 1024 * 1024:
            await utils.answer(message, "‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å. 200MB)!")
            return

        await utils.answer(message, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é....")

        try:
            response = requests.post(
                "https://api.imgur.com/3/upload",
                headers={"Authorization": f"Client-ID {self.imgur_client_id}"},
                files={"video": video},
            )
            response.raise_for_status()
            data = response.json()
        
            if data.get("success", False):
                link = data["data"].get("link", "")
                await utils.answer(message, f"‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!\nüîó {link}")
            else:
                await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {data.get('data', {}).get('error', 'Unknown error')}")
    
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")